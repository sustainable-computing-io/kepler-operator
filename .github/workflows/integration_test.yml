name: Integration test
on:
  pull_request:

    branches:
    - v1alpha1

env:
  GO_VERSION: "1.19"
  KIND_VERSION: "0.15.0"
  GO111MODULE: "on"
  OPERATOR_IMAGE: "quay.io/sustainable_computing_io/kepler-operator"
  KUBECONFIG: /tmp/kubeconfig 
 

jobs:
  build-operator:
    name: build-operator
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@main
        with: 
          go-version: ${{ env.GO_VERSION }}

      - name: Build operator container
        run: make docker-build IMG=${OPERATOR_IMAGE}:latest

      - name: Load operator image into cluster
        run: |
          docker inspect ${OPERATOR_IMAGE}
          docker tag ${OPERATOR_IMAGE} ${OPERATOR_IMAGE}:ci-build


      - name: Export container image
        run: docker save -o /tmp/image.tar ${OPERATOR_IMAGE}

      - name: Save container as artifact
        uses: actions/upload-artifact@v3
        with:
          name: kepler-operator
          path: /tmp/image.tar

    
  e2e:
    name: End-to-End Testing
    needs: [build-operator]
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: kepler-operator

      - name: Test artifact download
        run : |
          ls -R
          pwd

      - name: Import container image into cluster
        run: |
          docker load -i image.tar
          docker inspect ${OPERATOR_IMAGE}
          docker tag ${OPERATOR_IMAGE} ${OPERATOR_IMAGE}:ci-build

      - name: Install kernel headers
        run: |
          sudo apt-get install -y linux-headers-`uname -r`
          sudo ls /usr/src/linux-headers-`uname -r`

      - name: Install bcc
        run: |
            wget https://github.com/sustainable-computing-io/kepler-ci-artifacts/releases/download/v0.25.0/bcc_v0.25.0.tar.gz
            tar -zxvf bcc_v0.25.0.tar.gz
            sudo dpkg -i libbcc_0.25.0-1_amd64.deb

      - name: Install kubectl
        run: curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"

      - name: Start local k8s cluster
        run: make cluster-up
        env:
            CLUSTER_PROVIDER: ${{matrix.kube_provider}}
            PROMETHEUS_ENABLE: "true"
            GRAFANA_ENABLE: "false"
            CI_DEPLOY: "true"

      - name: Start operator
        run: |
          kind load docker-image "${OPERATOR_IMAGE}:ci-build"
          make deploy IMG=${OPERATOR_IMAGE}:ci-build

      - name: Run e2e tests
        run: |
          echo "Waiting for all containers to become ready ..."
          PODNAME=$(kubectl get pods -n kepler-operator-system | grep kepler-operator-controller-manager | awk '{print $1}')
          echo $PODNAME
          sleep 10
          kubectl logs  $PODNAME -c manager -n kepler-operator-system
          kubectl wait --for=condition=Ready pod --all -n kepler-operator-system --timeout 1m
          echo "Operator ready ..."
               
  push-image:
    name: Push operator container image to quay.io/sustainable_computing_io/kepler-operator
    needs: [build-operator,e2e]
    runs-on: ubuntu-latest
    steps: 
      
      - name: Login to quay.io/sustainable_computing_io/
        uses: docker/login-action@v1
        if: ${{ (github.repository_owner == 'sustainable-computing-io') && (github.ref == 'refs/heads/v1alpha1') }}
        with:
          registry: quay.io/sustainable_computing_io
          username: ${{ secrets.BOT_NAME }}
          password: ${{ secrets.BOT_TOKEN }}
      
      - name: Download image bundle
        uses: actions/download-artifact@v3
        with:
          name: kepler-operator

      - name: Test artifact download
        run : |
          ls -R
          pwd

      - name: Push to quay
        if: ${{ (github.repository_owner == 'sustainable-computing-io') && (github.ref == 'refs/heads/v1alpha1') }}
        run: |
          docker load -i image.tar
          docker inspect ${OPERATOR_IMAGE}
          docker tag ${OPERATOR_IMAGE} ${OPERATOR_IMAGE}:latest
          docker push ${OPERATOR_IMAGE}:latest 

  e2e-success:
    name: Successful e2e tests
    needs: [build-operator , e2e, push-image]
    runs-on: ubuntu-latest
    steps:
      - name: Successful
        run: echo "Previous steps were successful"

#TO-DO
# Add tests for e2e that checks if all the kepler metrics are present
# kubectl wait --for=condition=Ready pod --all -n kepler-operator-system --timeout 3m
# - name: Setup tmate session
#         if: ${{ failure() }}
#         uses: mxschmitt/action-tmate@v3
        # if: ${{ (github.repository_owner == 'sustainable-computing-io') && (github.ref == 'refs/heads/v1alpha1') }}
                # if: ${{ (github.repository_owner == 'sustainable-computing-io') && (github.ref == 'refs/heads/v1alpha1') }}

