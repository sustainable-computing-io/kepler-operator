# Example Kubernetes Secret for Redfish BMC credentials
# Store BMC authentication credentials securely
#
# IMPORTANT: This is an EXPERIMENTAL feature with no stability guarantees
#
# Security Best Practices:
# - Never commit secrets to git
# - Use proper secret management (Sealed Secrets, External Secrets, Vault)
# - Enable TLS verification (insecure: false) in production
# - Use read-only monitoring accounts with minimal permissions
# - Rotate credentials regularly

apiVersion: v1
kind: Secret
metadata:
  name: redfish-secret
  namespace: power-monitor
type: Opaque
stringData:
  redfish.yaml: |
    # Node to BMC mapping
    # Key: Node identifier (must match Kubernetes node name or PowerMonitor nodeName)
    # Value: BMC identifier that references an entry in the 'bmcs' section
    nodes:
      worker-1: bmc-worker-1
      worker-2: bmc-worker-2
      worker-3: bmc-worker-3

    # BMC connection details
    bmcs:
      bmc-worker-1:
        endpoint: https://bmc-worker-1.example.com
        username: monitoring-user
        password: "SecurePassword123!"
        insecure: false  # Set to true only for development/testing

      bmc-worker-2:
        endpoint: https://192.168.1.101
        username: monitoring-user
        password: "SecurePassword456!"
        insecure: false

      bmc-worker-3:
        endpoint: https://192.168.1.102:8443  # Custom port
        username: admin
        password: "SecurePassword789!"
        insecure: false

---
# For development/testing with mock BMC server
apiVersion: v1
kind: Secret
metadata:
  name: redfish-secret-dev
  namespace: power-monitor
type: Opaque
stringData:
  redfish.yaml: |
    nodes:
      kind-control-plane: mock-bmc

    bmcs:
      mock-bmc:
        endpoint: http://host.docker.internal:8000
        username: ""
        password: ""
        insecure: true
