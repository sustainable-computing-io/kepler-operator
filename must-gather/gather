#!/usr/bin/env bash

# copyright 2023.
#
# licensed under the apache license, version 2.0 (the "license");
# you may not use this file except in compliance with the license.
# you may obtain a copy of the license at
#
#     http://www.apache.org/licenses/license-2.0
#
# unless required by applicable law or agreed to in writing, software
# distributed under the license is distributed on an "as is" basis,
# without warranties or conditions of any kind, either express or implied.
# see the license for the specific language governing permissions and
# limitations under the license.
#

set -eu -o pipefail

SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)

source "${SCRIPT_DIR}"/common

print_usage() {
	echo -e "Usage: /usr/bin/gather <gather-collection-path>"
}

get_kepler_instance() {
	log "getting kepler instance(s)"
	KEPLERS=$(oc get keplers.kepler.system.sustainable.computing.io -oname)
	if [ -n "$KEPLERS" ]; then
		run oc get "$KEPLERS" -oyaml "$BASE_COLLECTION_PATH/keplers.yaml"
	else
		echo "no keplers found" >>"$BASE_COLLECTION_PATH/keplers.yaml"
	fi
}

get_kepler_events() {
	log "getting $KEPLER_NS events"
	run oc -n "$KEPLER_NS" get events "$BASE_COLLECTION_PATH/$KEPLER_NS""_events"
}

get_kepler_daemon_set() {
	log "getting kepler exporter daemonset"
	run oc -n "$KEPLER_NS" get ds kepler -oyaml "$BASE_COLLECTION_PATH/kepler-ds.yaml"
}

get_kepler_config_map() {
	log "getting kepler exporter config map"
	run oc -n "$KEPLER_NS" get cm kepler -oyaml "$BASE_COLLECTION_PATH/kepler-cm.yaml"
}

get_kepler_sa() {
	log "getting kepler exporter service account"
	run oc -n "$KEPLER_NS" get serviceaccount kepler -oyaml "$BASE_COLLECTION_PATH/kepler-sa.yaml"
}

get_kepler_scc() {
	log "getting kepler exporter scc"
	run oc get scc kepler -oyaml "$BASE_COLLECTION_PATH/kepler-scc.yaml"
}

gather_kepler_exporter_info() {
	KEPLER_PODS=$(oc -n "$KEPLER_NS" get pods -oname 2>/dev/null || echo "")
	for pod in $KEPLER_PODS; do
		pod=$(echo "$pod" | awk -F '/' '{print $2}')
		log "running gather script for kepler pod: $pod"
		"$SCRIPT_DIR"/gather-kepler-exporter-info "$BASE_COLLECTION_PATH" "$pod"
	done
}

gather_olm_info() {
	log "running gather script for olm"
	"$SCRIPT_DIR"/gather-olm-info "$BASE_COLLECTION_PATH"
}

gather_operator_info() {
	IS_POWER_MONITORING_OPERATOR=$(oc get csv | grep power-monitoring-operator || true)
	if [ -n "${IS_POWER_MONITORING_OPERATOR}" ]; then
		gather_power_monitoring_operator_info
	else
		gather_kepler_operator_info
	fi
}

gather_kepler_operator_info() {
	log "getting kepler-operator info"
	"$SCRIPT_DIR"/gather-kepler-operator-info "$BASE_COLLECTION_PATH"
}

gather_power_monitoring_operator_info() {
	log "getting power-monitoring-operator info"
	"$SCRIPT_DIR"/gather-power-monitoring-operator-info "$BASE_COLLECTION_PATH"
}

gather_monitoring_info() {
	log "getting monitoring info"
	"$SCRIPT_DIR"/gather-monitoring-info "$BASE_COLLECTION_PATH"
}

main() {
	case ${1-} in
	--help | -h)
		print_usage
		exit 0
		;;
	esac

	BASE_COLLECTION_PATH="${1:-/must-gather}"
	# NOTE: convert relative to absolute path
	BASE_COLLECTION_PATH="$(readlink -f "$BASE_COLLECTION_PATH")"
	export LOGFILE_PATH="${BASE_COLLECTION_PATH}/${LOGFILE_NAME}"

	mkdir -p "${BASE_COLLECTION_PATH}"
	cd "${BASE_COLLECTION_PATH}"
	echo -e "must-gather logs are located at: '${LOGFILE_PATH}'"

	mkdir -p "/tmp/cache-dir"
	export KUBECACHEDIR=/tmp/cache-dir

	echo "powermon must-gather started..."
	gather_olm_info
	gather_operator_info
	get_kepler_instance
	get_kepler_events
	get_kepler_daemon_set
	get_kepler_config_map
	get_kepler_sa
	get_kepler_scc
	gather_kepler_exporter_info
	gather_monitoring_info

	echo "powermon must-gather completed"
}

main "$@"
