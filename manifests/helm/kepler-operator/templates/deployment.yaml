apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kepler-operator.fullname" . }}-controller
  namespace: {{ include "kepler-operator.namespace" . }}
  labels:
    {{- include "kepler-operator.labels" . | nindent 4 }}
    app.kubernetes.io/component: manager
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "kepler-operator.managerLabels" . | nindent 6 }}
      app.kubernetes.io/part-of: kepler-operator
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        {{- include "kepler-operator.managerLabels" . | nindent 8 }}
        app.kubernetes.io/part-of: kepler-operator
    spec:
      serviceAccountName: {{ include "kepler-operator.serviceAccountName" . }}
      securityContext:
        runAsNonRoot: true
      terminationGracePeriodSeconds: 10
      containers:
        - name: manager
          image: {{ include "kepler-operator.image" . }}
          imagePullPolicy: {{ .Values.operator.pullPolicy }}
          command:
            - /manager
          args:
            {{- if .Values.operator.deploymentNamespace }}
            - --deployment-namespace={{ .Values.operator.deploymentNamespace }}
            {{- end }}
            - --leader-elect
            - --kepler.image=$(RELATED_IMAGE_KEPLER)
            - --kube-rbac-proxy.image=$(RELATED_IMAGE_KUBE_RBAC_PROXY)
            - --zap-log-level=5
          env:
            - name: RELATED_IMAGE_KEPLER
              value: {{ include "kepler-operator.keplerImage" . }}
            - name: RELATED_IMAGE_KUBE_RBAC_PROXY
              value: {{ include "kepler-operator.kubeRbacProxyImage" . }}
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
            - containerPort: 8080
              name: metrics
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 20
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 20
            periodSeconds: 20
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- if .Values.webhooks.enabled }}
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
          {{- end }}
      {{- if .Values.webhooks.enabled }}
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: webhook-server-cert
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
